clear all;
clc;

verbose = 1; tolerance = 1e-8;


% Problem
L = 1;
m = 0;
n = 2;

% P = [ yk zk yk1 | f1'(yk) ... fn'(yk) | f1'(yk1) ... fn'(ykn) | f1'(xs) ... fn'(xs)]
% F = [                    fi(yk)  |  fi(yk1)   ]

dimG = 3 + 2*n + (n-1); dimF = 2;
nbPts = 3; % xs, xk, yk1, xk1, ..., xkn

yk = zeros(1, dimG); yk(1) = 1;
zk = zeros(1, dimG); zk(2)= 1;
yk1= zeros(1, dimG); yk1(3)= 1;
xs = zeros(1, dimG);

gyk = zeros(n, dimG);gyk(:,4:3+n) = eye(n);
GYK = sum(gyk,1)/n;
gyk1 = zeros(n, dimG);gyk1(:,4+n:3+2*n) = eye(n);
GYK1 = sum(gyk1,1)/n;
gxs = zeros(n, dimG); gxs(1:n-1,dimG-(n-2):dimG) = eye(n-1);
gxs(end,:) = - sum(gxs,1);
GXS = sum(gxs,1)/n;

fyk = zeros(n, dimF); fyk(:,1) = 1;
FYK = sum(fyk,1)/n;
fyk1 = zeros(n, dimF); fyk1(:,2) = 1;
FYK1 = sum(fyk1,1)/n;
fxs = zeros(n, dimF);
FXS = sum(fxs,1)/n;

statesKf = (FYK - FXS);
statesK1f = (sum(FYK1,1)/n-FXS);
% line-searches

consLSY{1} = GYK1.' * (yk - yk1); consLSY{1} = (consLSY{1}+consLSY{1}.')/2;
consLSY{2} = GYK1.' * (zk -  yk); consLSY{2} = (consLSY{2}+consLSY{2}.')/2;

var = zeros(dimG);
for i = 1:n
    var = var + (gxs(i,:)-GXS).'*(gxs(i,:)-GXS)/n;
end

%%

lambda    = sdpvar(nbPts,nbPts,n,'full');
lambdaLSY = sdpvar(2,1);
lambdaVAR = sdpvar(1); 

SStep = sdpvar(2); cons = cons + (SStep >= 0); cons = cons + (SStep(1,1) == 1);
dsstep_avg = zeros(dimG);
for i = 1:n
    dsstep = [zk gyk1(i,:).'] * SStep * [zk.' gyk1(i,:).'].'; % V2
    dsstep_avg = dsstep_avg + dsstep/n;
end


cons_SDP{kl} = - Vz{kl} * (zk-xs).'*(zk-xs) -lambdaVAR{kl} * var +  dsstep_avg ...
    - Vx{kl}(1)*term1_k-Vx{kl}(2)*term2_k-Vx{kl}(3)*term3_k-Vx{kl}(4)*term4_k...
    + Vx{kl+1}(1)*term1_k1 + Vx{kl+1}(2)*term2_k1 + Vx{kl+1}(3)*term3_k1 + Vx{kl+1}(4)*term4_k1;
for i = 1:2
    cons_SDP{kl} = cons_SDP{kl} + lambdaLSY{kl}(i) * consLSY{i};
end
for i = 1:2
    for j = 1:n
        cons_SDP{kl} = cons_SDP{kl} + lambdaLSX{kl}(i) * consLS1{i,j}/n;
    end
end
cons_LIN{kl} = - vx{kl}.'*statesKf + vx{kl+1}.'*statesK1f;
for k = 1:n
    clear XX FF GG;
    XX = { xs, xk, yk1}; FF = { fxs(k,:), fxk(k,:), fyk1(k,:)}; GG = { gxs(k,:), gxk(k,:), gyk1(k,:)};
    for i = 1:n
        XX{3+i} =  xk1(i, :);
        FF{3+i} = fxk1(k, :, i);
        GG{3+i} = gxk1(k, :, i);
    end
    for i = 1:nbPts
        for j = 1:nbPts
            if j ~= i
                xi = XX{i}; xj = XX{j};
                gi = GG{i}; gj = GG{j};
                fi = FF{i}; fj = FF{j};
                TT = [xi; xj; gi; gj];
                
                cons_SDP{kl} = cons_SDP{kl} + lambda{kl}(i,j,k) * TT.' * M * TT;
                cons_LIN{kl} = cons_LIN{kl} + lambda{kl}(i,j,k) * (fi - fj);
            end
        end
    end
end
cons = cons + (lambdaVAR{kl} >=0);
cons = cons + (cons_SDP{kl} <= 0);
cons = cons + (cons_LIN{kl} == 0);
cons = cons + (lambda{kl} >= 0);
obj = -acc_ek;

solver_opt = sdpsettings('solver','mosek','verbose',verbose,'mosek.MSK_DPAR_INTPNT_CO_TOL_PFEAS',tolerance);
solverDetails=optimize(cons,-obj,solver_opt);


